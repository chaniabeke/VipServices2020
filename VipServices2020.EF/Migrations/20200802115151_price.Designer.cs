// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VipServices2020.EF;

namespace VipServices2020.EF.Migrations
{
    [DbContext(typeof(VipServicesContext))]
    [Migration("20200802115151_price")]
    partial class price
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VipServices2020.Domain.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Customer", b =>
                {
                    b.Property<int>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("BtwNumber")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CustomerNumber");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Limousine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FirstHourPrice")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NightLifePrice")
                        .HasColumnType("int");

                    b.Property<int>("WeddingPrice")
                        .HasColumnType("int");

                    b.Property<int>("WelnessPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Limousines");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BtwPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExclusiveBtw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FirstHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("FixedPrice")
                        .HasColumnType("int");

                    b.Property<int>("NightHourCount")
                        .HasColumnType("int");

                    b.Property<int>("NightHourPrice")
                        .HasColumnType("int");

                    b.Property<int>("OvertimeCount")
                        .HasColumnType("int");

                    b.Property<int>("OvertimePrice")
                        .HasColumnType("int");

                    b.Property<int>("SecondHourCount")
                        .HasColumnType("int");

                    b.Property<int>("SecondHourPrice")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArrangementType")
                        .HasColumnType("int");

                    b.Property<int?>("ArrivalLocationId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LimousineExpectedAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("LimousineId")
                        .HasColumnType("int");

                    b.Property<int?>("PriceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("TotalHours")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalLocationId");

                    b.HasIndex("CustomerNumber");

                    b.HasIndex("LimousineExpectedAddressId");

                    b.HasIndex("LimousineId");

                    b.HasIndex("PriceId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Customer", b =>
                {
                    b.HasOne("VipServices2020.Domain.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VipServices2020.Domain.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VipServices2020.Domain.Model.Reservation", b =>
                {
                    b.HasOne("VipServices2020.Domain.Model.Location", "ArrivalLocation")
                        .WithMany()
                        .HasForeignKey("ArrivalLocationId");

                    b.HasOne("VipServices2020.Domain.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerNumber");

                    b.HasOne("VipServices2020.Domain.Model.Address", "LimousineExpectedAddress")
                        .WithMany()
                        .HasForeignKey("LimousineExpectedAddressId");

                    b.HasOne("VipServices2020.Domain.Model.Limousine", "Limousine")
                        .WithMany()
                        .HasForeignKey("LimousineId");

                    b.HasOne("VipServices2020.Domain.Model.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("VipServices2020.Domain.Model.Location", "StartLocation")
                        .WithMany()
                        .HasForeignKey("StartLocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
